name: ci

permissions: {} # No default permissions.

on:
  push:
    branches:
      - "**" # All branches
    tags:
      - v[0-9]+.[0-9]+.[0-9]+ # Release tags, e.g. v0.1.2
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1" # Make tools pretty.

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Run Bootstrap.ps1
        shell: pwsh
        run: ./scripts/Bootstrap.ps1

      - name: Run Build-Package.ps1
        # This runs because if the build backend is not specified in pyproject.toml,
        # it defaults to setuptools.build_meta.
        # The resulting sdist and wheel are almost empty.
        shell: pwsh
        run: ./scripts/Build-Package.ps1

      - name: Dry run Release-Project.ps1
        # Release-Project fails if not run from the master branch.
        if: (github.ref == 'refs/heads/master')
        shell: pwsh
        # Bootstrap.ps1 could have modified the lockfile.
        # We stash it, since Release-Project needs a clean working copy.
        run: |
          ./scripts/Release-Project.ps1 -Bump patch -DryRun -AllowDirty

  package:
    name: Package
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Create archive
        id: create-archive
        run: |
          version=$(git describe --always)
          echo "Packaging scripts version $version"
          archive_name="scripts-$version.zip"
          echo "archive_name=$archive_name" >> $GITHUB_OUTPUT
          zip -rv "$archive_name" scripts LICENSE README.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.create-archive.outputs.archive_name }}
          path: ${{ steps.create-archive.outputs.archive_name }}
